///
/// @Generated by Mockolo
///



import Foundation


public class LibraryProtocolAMock: LibraryProtocolA {
    public init() { }


    public private(set) var nameCallCount = 0
    public var nameHandler: (() -> (String))?
    public func name() -> String {
        nameCallCount += 1
        if let nameHandler = nameHandler {
            return nameHandler()
        }
        return ""
    }

    public private(set) var versionCallCount = 0
    public var versionHandler: (() -> (String))?
    public func version() -> String {
        versionCallCount += 1
        if let versionHandler = versionHandler {
            return versionHandler()
        }
        return ""
    }
}

public class LibraryProtocolBMock: LibraryProtocolB {
    public init() { }


    public private(set) var ageCallCount = 0
    public var ageHandler: (() -> (Int))?
    public func age() -> Int {
        ageCallCount += 1
        if let ageHandler = ageHandler {
            return ageHandler()
        }
        return 0
    }

    public private(set) var doSomethingCallCount = 0
    public var doSomethingHandler: (() -> ())?
    public func doSomething()  {
        doSomethingCallCount += 1
        if let doSomethingHandler = doSomethingHandler {
            doSomethingHandler()
        }
        
    }
}

